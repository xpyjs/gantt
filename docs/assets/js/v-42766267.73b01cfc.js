"use strict";(self.webpackChunkgantt_doc=self.webpackChunkgantt_doc||[]).push([[679],{300:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-42766267",path:"/v0/column.html",title:"列组件 JGanttColumn",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基础使用",slug:"基础使用",children:[]},{level:2,title:"属性",slug:"属性",children:[{level:3,title:"center",slug:"center",children:[]},{level:3,title:"date-format",slug:"date-format",children:[]},{level:3,title:"empty-data",slug:"empty-data",children:[]},{level:3,title:"label*",slug:"label",children:[]},{level:3,title:"merge",slug:"merge",children:[]},{level:3,title:"name",slug:"name",children:[]},{level:3,title:"selectable",slug:"selectable",children:[]},{level:3,title:"width",slug:"width",children:[]}]},{level:2,title:"插槽",slug:"插槽",children:[]}],filePathRelative:"v0/column.md",git:{updatedTime:1639363027e3,contributors:[{name:"jeremyjone",email:"jeremyjone@qq.com",commits:1}]}}},4788:(a,n,s)=>{s.r(n),s.d(n,{default:()=>A});var t=s(6252);const e=(0,t._)("h1",{id:"列组件-jganttcolumn",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#列组件-jganttcolumn","aria-hidden":"true"},"#"),(0,t.Uk)(" 列组件 JGanttColumn")],-1),l=(0,t.uE)('<p>因为我们在内部已经将其加载，所以您并不需要显示的再次导入到您的组件中就可以使用。</p><p>列组件会显示在甘特表的左侧，如果没有提供，则不显示任何列。</p><h2 id="基础使用" tabindex="-1"><a class="header-anchor" href="#基础使用" aria-hidden="true">#</a> 基础使用</h2><p>您只需要简单的将其插入到根组件内即可。</p><p>基于入门的示例，您可以直接这样使用：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>j-gantt</span>\n    <span class="token attr-name">data-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataList<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>j-gantt-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>j-gantt</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>它将显示成如下内容：</p>',7),p=["src"],c=(0,t._)("h2",{id:"属性",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),(0,t.Uk)(" 属性")],-1),o={id:"center",tabindex:"-1"},r=(0,t._)("a",{class:"header-anchor",href:"#center","aria-hidden":"true"},"#",-1),u=(0,t.Uk)(" center "),i=(0,t._)("p",null,"可以控制当前列的内容居中，默认居左。",-1),d=(0,t._)("h3",{id:"date-format",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#date-format","aria-hidden":"true"},"#"),(0,t.Uk)(" date-format")],-1),m=(0,t._)("p",null,"自定义显示日期的格式。如果列内需要显示日期，可以通过该属性来格式化日期。",-1),h=(0,t._)("div",{class:"custom-container warning"},[(0,t._)("p",{class:"custom-container-title"},"请注意"),(0,t._)("p",null,"值得注意的是，如果给出该字段，那么其数据内容一定会被当成日期来解析并且格式化，所以不要在非日期字段添加该属性。")],-1),k=(0,t.Uk)("更多关于日期格式化的属性，参看 "),g=(0,t.Uk)("日期格式化属性"),b=(0,t._)("h3",{id:"empty-data",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#empty-data","aria-hidden":"true"},"#"),(0,t.Uk)(" empty-data")],-1),v=(0,t._)("p",null,"设置空数据时显示的内容。如果数据内容为空，则会显示空数据内容。",-1),_={id:"label",tabindex:"-1"},f=(0,t._)("a",{class:"header-anchor",href:"#label","aria-hidden":"true"},"#",-1),x=(0,t.Uk)(" label* "),y=(0,t._)("p",null,[(0,t._)("code",null,"label"),(0,t.Uk)(" 是一个必填属性，它应当对应您给出数据的某一个键名。")],-1),j=(0,t._)("p",null,[(0,t.Uk)("它将加载该字段数据的内容显示在列内容中，同时表头的名称默认也会显示为该 "),(0,t._)("code",null,"label"),(0,t.Uk)(" 名称。当然，您可以通过设置 "),(0,t._)("a",{href:"#name"},[(0,t._)("code",null,"name")]),(0,t.Uk)(" 来自定义。")],-1),q=(0,t._)("h3",{id:"merge",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#merge","aria-hidden":"true"},"#"),(0,t.Uk)(" merge")],-1),U=(0,t.uE)('<p>设置当前列是否需要与前一列合并。您可以给出一个 Boolean 值或者一个返回 Boolean 值的函数。</p><ul><li>函数允许您使用行内数据。</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">mergeFunc</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// your code</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 请确保返回一个 Boolean 值。</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>这是一个很灵活的属性，如果设置为 <code>true</code>，则会与前一列进行合并，同时不显示当前列的内容。</p><p><strong>请注意</strong>，该字段对首列无效。</p><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3>',6),w=(0,t._)("p",null,[(0,t.Uk)("设置该列表头的显示文本，如果没有，则会显示 "),(0,t._)("code",null,"label"),(0,t.Uk)(" 的内容。它的优先级比 "),(0,t._)("code",null,"label"),(0,t.Uk)(" 高。")],-1),W=(0,t._)("h3",{id:"selectable",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#selectable","aria-hidden":"true"},"#"),(0,t.Uk)(" selectable")],-1),B=(0,t._)("p",null,"设置当前列内容的文本是否可以选择，默认禁止选择。",-1),E=(0,t._)("h3",{id:"width",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#width","aria-hidden":"true"},"#"),(0,t.Uk)(" width")],-1),C=(0,t.uE)('<p>设置该列的列宽。默认宽度 80，请保持宽度大于 30，否则会引起渲染异常。</p><h2 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h2><p>列组件内部允许您插入任何内容，同时它会抛出当前行的数据以供您使用。</p><p>一个简单的示例：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>j-gantt-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ data }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>j-gantt-column</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>接下来，您将继续学习滑块组件的内容。</p>',6),S={},A=(0,s(3744).Z)(S,[["render",function(a,n){const s=(0,t.up)("Description"),S=(0,t.up)("Badge"),A=(0,t.up)("DataParameter"),D=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t.Wm)(s,{author:"jeremyjone",date:"2020-10-12",copyright:"jeremyjone"}),l,(0,t._)("img",{src:a.$withBase("/assets/column-basic.png"),alt:"column-basic"},null,8,p),c,(0,t._)("h3",o,[r,u,(0,t.Wm)(S,{type:"tip",text:"+v0.0.8",vertical:"top"})]),(0,t.Wm)(A,{t:"Boolean",d:"false"}),i,d,(0,t.Wm)(A,{t:"String",d:"yyyy-MM-dd"}),m,h,(0,t._)("p",null,[k,(0,t.Wm)(D,{to:"/v0/common.html#%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B1%9E%E6%80%A7"},{default:(0,t.w5)((()=>[g])),_:1})]),b,(0,t.Wm)(A,{t:"String",d:"无数据 😢"}),v,(0,t._)("h3",_,[f,x,(0,t.Wm)(S,{text:"required",type:"danger"})]),(0,t.Wm)(A,{r:"",t:"String"}),y,j,q,(0,t.Wm)(A,{t:"(data) => boolean | Boolean",d:"false"}),U,(0,t.Wm)(A,{t:"String"}),w,W,(0,t.Wm)(A,{t:"Boolean",d:"false"}),B,E,(0,t.Wm)(A,{t:"Number | String",d:"80"}),C],64)}]])},3744:(a,n)=>{n.Z=(a,n)=>{const s=a.__vccOpts||a;for(const[a,t]of n)s[a]=t;return s}}}]);